[{"/home/kagorora/Documents/dms-f/src/store/types/types.js":"1","/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js":"2","/home/kagorora/Documents/dms-f/src/store.js":"3","/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js":"4","/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js":"5","/home/kagorora/Documents/dms-f/src/App.js":"6","/home/kagorora/Documents/dms-f/src/components/register/Register.js":"7","/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js":"8","/home/kagorora/Documents/dms-f/src/components/profile/Profile.js":"9","/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js":"10","/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js":"11","/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js":"12","/home/kagorora/Documents/dms-f/src/components/admin/Users.js":"13","/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js":"14","/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js":"15","/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js":"16","/home/kagorora/Documents/dms-f/src/components/reusable/Message.js":"17","/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js":"18","/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js":"19","/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js":"20"},{"size":2771,"mtime":1612877724063,"results":"21","hashOfConfig":"22"},{"size":2515,"mtime":1612877786973,"results":"23","hashOfConfig":"22"},{"size":2030,"mtime":1612869863406,"results":"24","hashOfConfig":"22"},{"size":4696,"mtime":1612877890009,"results":"25","hashOfConfig":"22"},{"size":2712,"mtime":1612874155787,"results":"26","hashOfConfig":"22"},{"size":1823,"mtime":1612874362268,"results":"27","hashOfConfig":"22"},{"size":4847,"mtime":1612243518508,"results":"28","hashOfConfig":"22"},{"size":1792,"mtime":1612738478893,"results":"29","hashOfConfig":"22"},{"size":4959,"mtime":1612275251103,"results":"30","hashOfConfig":"22"},{"size":336,"mtime":1612243518508,"results":"31","hashOfConfig":"22"},{"size":913,"mtime":1612243518508,"results":"32","hashOfConfig":"22"},{"size":3168,"mtime":1612838980033,"results":"33","hashOfConfig":"22"},{"size":3141,"mtime":1612877586139,"results":"34","hashOfConfig":"22"},{"size":990,"mtime":1612194906665,"results":"35","hashOfConfig":"22"},{"size":5161,"mtime":1612817519718,"results":"36","hashOfConfig":"22"},{"size":3031,"mtime":1612738478917,"results":"37","hashOfConfig":"22"},{"size":244,"mtime":1612194906661,"results":"38","hashOfConfig":"22"},{"size":1263,"mtime":1612738478917,"results":"39","hashOfConfig":"22"},{"size":1238,"mtime":1612738478917,"results":"40","hashOfConfig":"22"},{"size":1541,"mtime":1612243518508,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v1pjll",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kagorora/Documents/dms-f/src/store/types/types.js",[],"/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js",[],"/home/kagorora/Documents/dms-f/src/store.js",[],["85","86"],"/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js",[],"/home/kagorora/Documents/dms-f/src/App.js",[],"/home/kagorora/Documents/dms-f/src/components/register/Register.js",[],"/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/home/kagorora/Documents/dms-f/src/components/profile/Profile.js",["87","88"],"import React, { useEffect, useState } from \"react\";\nimport { FormGroup, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUserProfile,\n  UpdateUserProfile,\n} from \"../../store/actions/usersActions.js\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\n\nconst Profile = ({ history }) => {\n  const dispatch = new useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nationalId, setNationalId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userProfile = useSelector((state) => state.userProfile);\n  const { user, loading, error } = userProfile;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userProfileReset = useSelector((state) => state.userProfileReset);\n  const { success } = userProfileReset;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile(\"profile\"));\n      } else {\n        setName(user.name);\n        setPhoneNumber(user.phoneNumber);\n        setNationalId(user.nationalId);\n        setEmail(user.email);\n        setAddress(user.address);\n        setUserType(user.userType);\n        setMessage(user.message);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password && confirmPassword && password !== confirmPassword) {\n      setMessage(\"passwords are not matching!, try again\");\n    } else {\n      dispatch(\n        UpdateUserProfile({\n          id: user._id,\n          name,\n          phoneNumber,\n          nationalId,\n          email,\n          address,\n          userType,\n        })\n      );\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>{\"Profile Updated\"}</Message>}\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder='enter name'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              value={phoneNumber}\n              placeholder='enter Phone Number'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>nationalId</Form.Label>\n            <Form.Control\n              onChange={(e) => setNationalId(e.target.value)}\n              value={nationalId}\n              placeholder='enter NationalId'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>email</Form.Label>\n            <Form.Control\n              type='email'\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              placeholder='enter email'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>location</Form.Label>\n            <Form.Control\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n              placeholder='enter Location'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>user Type</Form.Label>\n            <Form.Control\n              value={userType}\n              onChange={(e) => setUserType(e.target.value)}\n              disabled='disabled'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              placeholder='enter password'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>comfirm password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              placeholder='confirm password'\n            ></Form.Control>\n          </FormGroup>\n          <Button type='submit' variant='primary' className='btn-block rounded'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n","/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js",[],"/home/kagorora/Documents/dms-f/src/components/admin/Users.js",["89"],"import React, { useEffect } from \"react\";\nimport { Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\nimport { getAllUsers } from \"../../store/actions/usersActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Users = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const listUsers = useSelector((state) => state.listUsers);\n  const { users, loading, error } = listUsers;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.userType === \"admin\") {\n      dispatch(getAllUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, getAllUsers, history]);\n\n  const deleteHandler = (id) => {\n    // delete\n  };\n\n  return (\n    <div className='justify-content-center'>\n      <Row>\n        <Col>\n          <h2>Users</h2>\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant='danger'>{error}</Message>\n          ) : (\n            <Table striped bordered hover responsive className='table-sm'>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>UserType</th>\n                  <th>Admin</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name ? user.name : \"N/A\"}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>{user.userType ? user.userType : \"N/A\"}</td>\n                    <td>\n                      {user.userType === \"admin\" ? (\n                        <i\n                          className='fas fa-check'\n                          style={{ color: \"green\" }}\n                        ></i>\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`user/${user._id}/edit`}>\n                        <Button variant='light' className='btn-sm'>\n                          <i className='fas fa-edit'></i>\n                        </Button>\n                      </LinkContainer>\n                      <Button\n                        variant='danger'\n                        className='btn-sm'\n                        onClick={() => deleteHandler(user._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Users;\n","/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js",[],"/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js",["90"],"/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Message.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":12,"column":9,"nodeType":"97","endLine":12,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":22,"column":10,"nodeType":"100","messageId":"101","endLine":22,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":24,"column":6,"nodeType":"103","endLine":24,"endColumn":38,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":48,"column":6,"nodeType":"103","endLine":48,"endColumn":24,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 49) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array. Outer scope values like 'getAllUsers' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"115","text":"116"},"Update the dependencies array to be: [history, order._id, success]",{"range":"117","text":"118"},[799,831],"[dispatch, history, userInfo]",[1360,1378],"[history, order._id, success]"]
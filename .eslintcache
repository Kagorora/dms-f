[{"/Users/maxim/Documents/ECMS/dms-f/src/store/types/types.js":"1","/Users/maxim/Documents/ECMS/dms-f/src/store/actions/cartsActions.js":"2","/Users/maxim/Documents/ECMS/dms-f/src/components/paymentMethod/PaymentMethod.js":"3","/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/Header/Header.js":"4","/Users/maxim/Documents/ECMS/dms-f/src/components/order/Order.js":"5","/Users/maxim/Documents/ECMS/dms-f/src/components/admin/Orders.js":"6","/Users/maxim/Documents/ECMS/dms-f/src/App.js":"7","/Users/maxim/Documents/ECMS/dms-f/src/components/profile/Profile.js":"8","/Users/maxim/Documents/ECMS/dms-f/src/components/shipping/Shipping.js":"9","/Users/maxim/Documents/ECMS/dms-f/src/components/admin/EditProduct.js":"10","/Users/maxim/Documents/ECMS/dms-f/src/components/buyer/Buyer.js":"11","/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/FormContainer.js":"12","/Users/maxim/Documents/ECMS/dms-f/src/store/actions/usersActions.js":"13","/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/Product/Product.js":"14","/Users/maxim/Documents/ECMS/dms-f/src/components/admin/EditUser.js":"15","/Users/maxim/Documents/ECMS/dms-f/src/store/actions/orderActions.js":"16","/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/orderReducers.js":"17","/Users/maxim/Documents/ECMS/dms-f/src/store.js":"18","/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/userReducers.js":"19","/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/productReducers.js":"20"},{"size":5448,"mtime":1618699077033,"results":"21","hashOfConfig":"22"},{"size":1238,"mtime":1618669882834,"results":"23","hashOfConfig":"22"},{"size":2090,"mtime":1618676817249,"results":"24","hashOfConfig":"22"},{"size":3388,"mtime":1618675795183,"results":"25","hashOfConfig":"22"},{"size":8497,"mtime":1618681031181,"results":"26","hashOfConfig":"22"},{"size":6420,"mtime":1618701883129,"results":"27","hashOfConfig":"22"},{"size":2389,"mtime":1618669882833,"results":"28","hashOfConfig":"22"},{"size":4984,"mtime":1618662468614,"results":"29","hashOfConfig":"22"},{"size":4346,"mtime":1618676581176,"results":"30","hashOfConfig":"22"},{"size":5874,"mtime":1618662468611,"results":"31","hashOfConfig":"22"},{"size":1068,"mtime":1618662468612,"results":"32","hashOfConfig":"22"},{"size":336,"mtime":1618662468615,"results":"33","hashOfConfig":"22"},{"size":6293,"mtime":1618662468617,"results":"34","hashOfConfig":"22"},{"size":917,"mtime":1618662468616,"results":"35","hashOfConfig":"22"},{"size":4408,"mtime":1618681429185,"results":"36","hashOfConfig":"22"},{"size":6571,"mtime":1618699387892,"results":"37","hashOfConfig":"22"},{"size":4919,"mtime":1618699477947,"results":"38","hashOfConfig":"22"},{"size":2644,"mtime":1618699505061,"results":"39","hashOfConfig":"22"},{"size":3491,"mtime":1618662468618,"results":"40","hashOfConfig":"22"},{"size":3173,"mtime":1618662468618,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pr9sao",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maxim/Documents/ECMS/dms-f/src/store/types/types.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/store/actions/cartsActions.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/Header/Header.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/order/Order.js",["84","85"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport {\n  getOrderDetails,\n  payOrder,\n  markOrderAsDelivered,\n} from \"../../store/actions/orderActions.js\";\nimport Loader from \"../reusable/Loader.js\";\nimport { ORDER_PAY_RESET } from \"../../store/types/types\";\n\nconst Order = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { success: successPay, loading: loadingPay } = orderPay;\n\n  const deliverOrder = useSelector((state) => state.deliverOrder);\n  const {\n    success: successDelivered,\n    loading: loadingDelivered,\n    error: errorDelivered,\n  } = deliverOrder;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    // Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [userInfo, history]);\n\n  useEffect(() => {\n    if (successDelivered) {\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [successDelivered]);\n\n  useEffect(() => {\n    if(orderDetails.paymentMethod === 'LOAN'){\n      orderDetails.order.isLoan(true)\n    }\n  }, [orderDetails])\n\n  useEffect(() => {\n    if (order && orderId !== order._id) {\n      dispatch(getOrderDetails(orderId));\n    } else {\n      const addPayPalScript = async () => {\n        const { data: clientId } = await axios.get(\"/api/config/paypal\");\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n        script.async = true;\n        script.onload = () => {\n          setSdkReady(true);\n        };\n        document.body.appendChild(script);\n      };\n\n      if (!order || successPay) {\n        dispatch({ type: ORDER_PAY_RESET });\n        dispatch(getOrderDetails(orderId));\n      } else if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(markOrderAsDelivered(orderId));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : loadingDelivered ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : errorDelivered ? (\n    <Message variant='danger'>{errorDelivered}</Message>\n  ) : (\n    <>\n    { orderDetails.order.paymentMethod == 'LOAN' && userInfo.userType !== 'admin' && (\n      <Message variant='success'>Loan successfuly made</Message>\n    )\n    }\n      <>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Destination</h2>\n                <p>\n                  <strong>Name: </strong>\n                  {order.user.name}\n                </p>\n                <p>\n                  <strong>Email: </strong>\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address: </strong>\n                  {order.orderAddress.Province}, {order.orderAddress.District},{\" \"}\n                  {order.orderAddress.Sector}, {order.orderAddress.cell},{\" \"}\n                  {order.orderAddress.city}, {order.orderAddress.streetNumber}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isDelivered ? (\n                <Message variant='danger'>Not Delivered</Message>\n              ) : (\n                <Message variant='success'>\n                  delivered on {order.deliveredAt}\n                </Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                  <strong>Method: </strong>\n                  {order.paymentMethod}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isPaid ? (\n                <Message variant='danger'>Not Paid</Message>\n              ) : (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order is Empty</Message>\n                ) : (\n                  <ListGroup variant='flush'>\n                    {order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} * {item.price} = FRW\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>FRW {order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Transport</Col>\n                    <Col>FRW {order.deliveryPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>FRW {order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Total Amount</Col>\n                    <Col>FRW {order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                \n                {!order.isPaid && orderDetails.order.paymentMethod !== 'LOAN' && userInfo.userType !== 'admin' && (\n                  <ListGroup.Item>\n                    {loadingPay && <Loader />}\n                    {!sdkReady ? (\n                      <Loader />\n                    ) : (\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      />\n                    )}\n                  </ListGroup.Item>\n                )}\n                {!successDelivered &&\n                  userInfo &&\n                  userInfo.userType === \"admin\" &&\n                  order.isPaid &&\n                  !order.isDelivered && (\n                    <ListGroup.Item>\n                      <Button\n                        type='button'\n                        className='btn btn-block rounded'\n                        onClick={deliverHandler}\n                      >\n                        Mark as Delivered\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    </>\n  );\n};\n\nexport default Order;\n","/Users/maxim/Documents/ECMS/dms-f/src/components/admin/Orders.js",["86","87","88"],"/Users/maxim/Documents/ECMS/dms-f/src/App.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/profile/Profile.js",["89","90"],"/Users/maxim/Documents/ECMS/dms-f/src/components/shipping/Shipping.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/admin/EditProduct.js",["91","92","93"],"/Users/maxim/Documents/ECMS/dms-f/src/components/buyer/Buyer.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/FormContainer.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/store/actions/usersActions.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/reusable/Product/Product.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/components/admin/EditUser.js",["94"],"/Users/maxim/Documents/ECMS/dms-f/src/store/actions/orderActions.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/orderReducers.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/store.js",[],["95","96"],"/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/userReducers.js",[],"/Users/maxim/Documents/ECMS/dms-f/src/store/reducers/productReducers.js",[],{"ruleId":"97","severity":1,"message":"98","line":60,"column":6,"nodeType":"99","endLine":60,"endColumn":24,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":115,"column":40,"nodeType":"103","messageId":"104","endLine":115,"endColumn":42},{"ruleId":"105","severity":1,"message":"106","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":18,"column":22,"nodeType":"107","messageId":"108","endLine":18,"endColumn":35},{"ruleId":"105","severity":1,"message":"110","line":32,"column":59,"nodeType":"107","messageId":"108","endLine":32,"endColumn":94},{"ruleId":"97","severity":1,"message":"111","line":13,"column":9,"nodeType":"112","endLine":13,"endColumn":37},{"ruleId":"105","severity":1,"message":"113","line":23,"column":10,"nodeType":"107","messageId":"108","endLine":23,"endColumn":17},{"ruleId":"105","severity":1,"message":"114","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"115","line":21,"column":9,"nodeType":"112","endLine":21,"endColumn":37},{"ruleId":"105","severity":1,"message":"116","line":31,"column":21,"nodeType":"107","messageId":"108","endLine":31,"endColumn":33},{"ruleId":"97","severity":1,"message":"117","line":16,"column":9,"nodeType":"112","endLine":16,"endColumn":37},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.","ArrayExpression",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'sortedData' is assigned a value but never used.","Identifier","unusedVar","'setSortedData' is assigned a value but never used.","'OrdersfilteredByPaymentMethodLoader' is assigned a value but never used.","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 50) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","'message' is assigned a value but never used.","'axios' is defined but never used.","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 59) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","'setUploading' is assigned a value but never used.","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 43) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],{"desc":"125","fix":"126"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, orderId, successDelivered]",{"range":"127","text":"128"},[1727,1745],"[dispatch, orderId, successDelivered]"]
[{"/home/kagorora/Documents/dms-f/src/App.js":"1","/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js":"2","/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js":"3","/home/kagorora/Documents/dms-f/src/components/reusable/Message.js":"4","/home/kagorora/Documents/dms-f/src/store/types/types.js":"5","/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js":"6","/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js":"7","/home/kagorora/Documents/dms-f/src/components/login/Login.js":"8","/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js":"9","/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js":"10","/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js":"11","/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js":"12","/home/kagorora/Documents/dms-f/src/components/register/Register.js":"13","/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js":"14","/home/kagorora/Documents/dms-f/src/index.js":"15","/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js":"16","/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js":"17","/home/kagorora/Documents/dms-f/src/store.js":"18","/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js":"19","/home/kagorora/Documents/dms-f/src/components/cart/Cart.js":"20","/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js":"21","/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js":"22","/home/kagorora/Documents/dms-f/src/components/profile/Profile.js":"23","/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js":"24","/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js":"25","/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js":"26","/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js":"27","/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js":"28","/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js":"29","/home/kagorora/Documents/dms-f/src/components/order/Order.js":"30"},{"size":1606,"mtime":1612798025175,"results":"31","hashOfConfig":"32"},{"size":990,"mtime":1612194906665,"results":"33","hashOfConfig":"32"},{"size":1883,"mtime":1612275251107,"results":"34","hashOfConfig":"32"},{"size":244,"mtime":1612194906661,"results":"35","hashOfConfig":"32"},{"size":2133,"mtime":1612816623151,"results":"36","hashOfConfig":"32"},{"size":913,"mtime":1612243518508,"results":"37","hashOfConfig":"32"},{"size":1001,"mtime":1612245195426,"results":"38","hashOfConfig":"32"},{"size":2235,"mtime":1612246403732,"results":"39","hashOfConfig":"32"},{"size":379,"mtime":1612243518508,"results":"40","hashOfConfig":"32"},{"size":1541,"mtime":1612243518508,"results":"41","hashOfConfig":"32"},{"size":1238,"mtime":1612738478917,"results":"42","hashOfConfig":"32"},{"size":1160,"mtime":1612194906665,"results":"43","hashOfConfig":"32"},{"size":4847,"mtime":1612243518508,"results":"44","hashOfConfig":"32"},{"size":3485,"mtime":1612275251107,"results":"45","hashOfConfig":"32"},{"size":319,"mtime":1612197568095,"results":"46","hashOfConfig":"32"},{"size":2066,"mtime":1612243518508,"results":"47","hashOfConfig":"32"},{"size":336,"mtime":1612243518508,"results":"48","hashOfConfig":"32"},{"size":1922,"mtime":1612816831359,"results":"49","hashOfConfig":"32"},{"size":3897,"mtime":1612246014554,"results":"50","hashOfConfig":"32"},{"size":3542,"mtime":1612246650411,"results":"51","hashOfConfig":"32"},{"size":1164,"mtime":1612704885018,"results":"52","hashOfConfig":"32"},{"size":310,"mtime":1612243518508,"results":"53","hashOfConfig":"32"},{"size":4959,"mtime":1612275251103,"results":"54","hashOfConfig":"32"},{"size":3031,"mtime":1612738478917,"results":"55","hashOfConfig":"32"},{"size":1263,"mtime":1612738478917,"results":"56","hashOfConfig":"32"},{"size":1792,"mtime":1612738478893,"results":"57","hashOfConfig":"32"},{"size":5161,"mtime":1612817519718,"results":"58","hashOfConfig":"32"},{"size":1649,"mtime":1612816745687,"results":"59","hashOfConfig":"32"},{"size":2425,"mtime":1612817313833,"results":"60","hashOfConfig":"32"},{"size":5044,"mtime":1612816127922,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"v1pjll",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},"/home/kagorora/Documents/dms-f/src/App.js",[],["132","133"],"/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js",[],["134","135"],"/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Message.js",[],["136","137"],"/home/kagorora/Documents/dms-f/src/store/types/types.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js",[],"/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js",[],"/home/kagorora/Documents/dms-f/src/components/login/Login.js",[],["138","139"],"/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js",[],["140","141"],"/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js",[],["142","143"],"/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js",[],"/home/kagorora/Documents/dms-f/src/components/register/Register.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js",[],"/home/kagorora/Documents/dms-f/src/index.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js",[],"/home/kagorora/Documents/dms-f/src/store.js",[],"/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js",[],"/home/kagorora/Documents/dms-f/src/components/cart/Cart.js",[],"/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js",[],["144","145"],"/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js",[],"/home/kagorora/Documents/dms-f/src/components/profile/Profile.js",["146","147"],"import React, { useEffect, useState } from \"react\";\nimport { FormGroup, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUserProfile,\n  UpdateUserProfile,\n} from \"../../store/actions/usersActions.js\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\n\nconst Profile = ({ history }) => {\n  const dispatch = new useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nationalId, setNationalId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userProfile = useSelector((state) => state.userProfile);\n  const { user, loading, error } = userProfile;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userProfileReset = useSelector((state) => state.userProfileReset);\n  const { success } = userProfileReset;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile(\"profile\"));\n      } else {\n        setName(user.name);\n        setPhoneNumber(user.phoneNumber);\n        setNationalId(user.nationalId);\n        setEmail(user.email);\n        setAddress(user.address);\n        setUserType(user.userType);\n        setMessage(user.message);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password && confirmPassword && password !== confirmPassword) {\n      setMessage(\"passwords are not matching!, try again\");\n    } else {\n      dispatch(\n        UpdateUserProfile({\n          id: user._id,\n          name,\n          phoneNumber,\n          nationalId,\n          email,\n          address,\n          userType,\n        })\n      );\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>{\"Profile Updated\"}</Message>}\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder='enter name'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              value={phoneNumber}\n              placeholder='enter Phone Number'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>nationalId</Form.Label>\n            <Form.Control\n              onChange={(e) => setNationalId(e.target.value)}\n              value={nationalId}\n              placeholder='enter NationalId'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>email</Form.Label>\n            <Form.Control\n              type='email'\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              placeholder='enter email'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>location</Form.Label>\n            <Form.Control\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n              placeholder='enter Location'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>user Type</Form.Label>\n            <Form.Control\n              value={userType}\n              onChange={(e) => setUserType(e.target.value)}\n              disabled='disabled'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              placeholder='enter password'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>comfirm password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              placeholder='confirm password'\n            ></Form.Control>\n          </FormGroup>\n          <Button type='submit' variant='primary' className='btn-block rounded'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n",["148","149"],"/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js",[],"/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js",["150"],"/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js",[],"/home/kagorora/Documents/dms-f/src/components/order/Order.js",["151"],"import React, { useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport { getOrderDetails } from \"../../store/actions/orderActions.js\";\nimport Loader from \"../reusable/Loader.js\";\n\nconst Order = ({ match }) => {\n  const orderId = match.params.id;\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  if (!loading) {\n    // Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    dispatch(getOrderDetails(orderId));\n  }, [dispatch, orderId]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1 className='mt-4'>Order: {order._id}</h1>\n      <>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Destination</h2>\n                <p>\n                  <strong>Name: </strong>\n                  {order.user.name}\n                </p>\n                <p>\n                  <strong>Email: </strong>\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address: </strong>\n                  {order.orderAddress.Province}, {order.orderAddress.District},{\" \"}\n                  {order.orderAddress.Sector}, {order.orderAddress.cell},{\" \"}\n                  {order.orderAddress.city}, {order.orderAddress.streetNumber}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isDelivered ? (\n                <Message variant='danger'>Not Delivered</Message>\n              ) : (\n                <Message variant='success'>Delivered</Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                  <strong>Method: </strong>\n                  {order.paymentMethod}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isPaid ? (\n                <Message variant='danger'>Not Paid</Message>\n              ) : (\n                <Message variant='success'>Paid</Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order is Empty</Message>\n                ) : (\n                  <ListGroup variant='flush'>\n                    {order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} * {item.price} = FRW\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>FRW {order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Transport</Col>\n                    <Col>FRW {order.deliveryPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>FRW {order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Total Amount</Col>\n                    <Col>FRW {order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    </>\n  );\n};\n\nexport default Order;\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"156"},{"ruleId":"154","replacedBy":"157"},{"ruleId":"152","replacedBy":"158"},{"ruleId":"154","replacedBy":"159"},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"152","replacedBy":"164"},{"ruleId":"154","replacedBy":"165"},{"ruleId":"152","replacedBy":"166"},{"ruleId":"154","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":12,"column":9,"nodeType":"170","endLine":12,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":22,"column":10,"nodeType":"173","messageId":"174","endLine":22,"endColumn":17},{"ruleId":"152","replacedBy":"175"},{"ruleId":"154","replacedBy":"176"},{"ruleId":"168","severity":1,"message":"177","line":48,"column":6,"nodeType":"178","endLine":48,"endColumn":24,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":16},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],["181"],["182"],["181"],["182"],["181"],["182"],["181"],["182"],["181"],["182"],"react-hooks/exhaustive-deps","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 49) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar",["181"],["182"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},"Update the dependencies array to be: [history, order._id, success]",{"range":"186","text":"187"},[1360,1378],"[history, order._id, success]"]
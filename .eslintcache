[{"/home/kagorora/Documents/dms-f/src/App.js":"1","/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js":"2","/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js":"3","/home/kagorora/Documents/dms-f/src/components/reusable/Message.js":"4","/home/kagorora/Documents/dms-f/src/store/types/types.js":"5","/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js":"6","/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js":"7","/home/kagorora/Documents/dms-f/src/components/login/Login.js":"8","/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js":"9","/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js":"10","/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js":"11","/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js":"12","/home/kagorora/Documents/dms-f/src/components/register/Register.js":"13","/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js":"14","/home/kagorora/Documents/dms-f/src/index.js":"15","/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js":"16","/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js":"17","/home/kagorora/Documents/dms-f/src/store.js":"18","/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js":"19","/home/kagorora/Documents/dms-f/src/components/cart/Cart.js":"20","/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js":"21","/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js":"22","/home/kagorora/Documents/dms-f/src/components/profile/Profile.js":"23","/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js":"24","/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js":"25","/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js":"26","/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js":"27","/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js":"28","/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js":"29","/home/kagorora/Documents/dms-f/src/components/order/Order.js":"30"},{"size":1606,"mtime":1612798025175,"results":"31","hashOfConfig":"32"},{"size":990,"mtime":1612194906665,"results":"33","hashOfConfig":"32"},{"size":1883,"mtime":1612275251107,"results":"34","hashOfConfig":"32"},{"size":244,"mtime":1612194906661,"results":"35","hashOfConfig":"32"},{"size":2133,"mtime":1612816623151,"results":"36","hashOfConfig":"32"},{"size":913,"mtime":1612243518508,"results":"37","hashOfConfig":"32"},{"size":1001,"mtime":1612245195426,"results":"38","hashOfConfig":"32"},{"size":2235,"mtime":1612246403732,"results":"39","hashOfConfig":"32"},{"size":379,"mtime":1612243518508,"results":"40","hashOfConfig":"32"},{"size":1541,"mtime":1612243518508,"results":"41","hashOfConfig":"32"},{"size":1238,"mtime":1612738478917,"results":"42","hashOfConfig":"32"},{"size":1160,"mtime":1612194906665,"results":"43","hashOfConfig":"32"},{"size":4847,"mtime":1612243518508,"results":"44","hashOfConfig":"32"},{"size":3485,"mtime":1612275251107,"results":"45","hashOfConfig":"32"},{"size":319,"mtime":1612197568095,"results":"46","hashOfConfig":"32"},{"size":2066,"mtime":1612243518508,"results":"47","hashOfConfig":"32"},{"size":336,"mtime":1612243518508,"results":"48","hashOfConfig":"32"},{"size":1922,"mtime":1612816831359,"results":"49","hashOfConfig":"32"},{"size":3897,"mtime":1612246014554,"results":"50","hashOfConfig":"32"},{"size":3542,"mtime":1612246650411,"results":"51","hashOfConfig":"32"},{"size":1164,"mtime":1612738478917,"results":"52","hashOfConfig":"32"},{"size":310,"mtime":1612243518508,"results":"53","hashOfConfig":"32"},{"size":4959,"mtime":1612275251103,"results":"54","hashOfConfig":"32"},{"size":3031,"mtime":1612738478917,"results":"55","hashOfConfig":"32"},{"size":1263,"mtime":1612738478917,"results":"56","hashOfConfig":"32"},{"size":1792,"mtime":1612738478893,"results":"57","hashOfConfig":"32"},{"size":5161,"mtime":1612817519718,"results":"58","hashOfConfig":"32"},{"size":1649,"mtime":1612816745687,"results":"59","hashOfConfig":"32"},{"size":2425,"mtime":1612828959022,"results":"60","hashOfConfig":"32"},{"size":6661,"mtime":1612828017127,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"v1pjll",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},"/home/kagorora/Documents/dms-f/src/App.js",[],["131","132"],"/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js",[],["133","134"],"/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Message.js",[],"/home/kagorora/Documents/dms-f/src/store/types/types.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js",[],"/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js",[],["135","136"],"/home/kagorora/Documents/dms-f/src/components/login/Login.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js",[],["137","138"],"/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js",[],["139","140"],"/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js",[],"/home/kagorora/Documents/dms-f/src/components/register/Register.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js",[],"/home/kagorora/Documents/dms-f/src/index.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js",[],"/home/kagorora/Documents/dms-f/src/store.js",[],"/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js",[],"/home/kagorora/Documents/dms-f/src/components/cart/Cart.js",[],"/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js",[],"/home/kagorora/Documents/dms-f/src/components/profile/Profile.js",["141","142"],"import React, { useEffect, useState } from \"react\";\nimport { FormGroup, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUserProfile,\n  UpdateUserProfile,\n} from \"../../store/actions/usersActions.js\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\n\nconst Profile = ({ history }) => {\n  const dispatch = new useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nationalId, setNationalId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userProfile = useSelector((state) => state.userProfile);\n  const { user, loading, error } = userProfile;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userProfileReset = useSelector((state) => state.userProfileReset);\n  const { success } = userProfileReset;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile(\"profile\"));\n      } else {\n        setName(user.name);\n        setPhoneNumber(user.phoneNumber);\n        setNationalId(user.nationalId);\n        setEmail(user.email);\n        setAddress(user.address);\n        setUserType(user.userType);\n        setMessage(user.message);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password && confirmPassword && password !== confirmPassword) {\n      setMessage(\"passwords are not matching!, try again\");\n    } else {\n      dispatch(\n        UpdateUserProfile({\n          id: user._id,\n          name,\n          phoneNumber,\n          nationalId,\n          email,\n          address,\n          userType,\n        })\n      );\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>{\"Profile Updated\"}</Message>}\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder='enter name'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              value={phoneNumber}\n              placeholder='enter Phone Number'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>nationalId</Form.Label>\n            <Form.Control\n              onChange={(e) => setNationalId(e.target.value)}\n              value={nationalId}\n              placeholder='enter NationalId'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>email</Form.Label>\n            <Form.Control\n              type='email'\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              placeholder='enter email'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>location</Form.Label>\n            <Form.Control\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n              placeholder='enter Location'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>user Type</Form.Label>\n            <Form.Control\n              value={userType}\n              onChange={(e) => setUserType(e.target.value)}\n              disabled='disabled'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              placeholder='enter password'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>comfirm password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              placeholder='confirm password'\n            ></Form.Control>\n          </FormGroup>\n          <Button type='submit' variant='primary' className='btn-block rounded'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n",["143","144"],"/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js",[],"/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js",["145"],"import React, { useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport CheckoutSteps from \"../reusable/CheckoutSteps/CheckoutSteps.js\";\nimport { createOrder } from \"../../store/actions/orderActions.js\";\n\nconst PlaceOrder = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, paymentMethod, cartItems } = cart;\n  const {\n    Province,\n    District,\n    Sector,\n    cell,\n    city,\n    streetNumber,\n  } = shippingAddress;\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  const itemsPrice = addDecimals(\n    cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  const shippingPrice = addDecimals(itemsPrice > 100 ? 0 : 100);\n\n  const taxPrice = addDecimals(Number((0.15 * itemsPrice).toFixed(2)));\n\n  const totalPrice = (\n    Number(itemsPrice) +\n    Number(shippingPrice) +\n    Number(taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cartItems,\n        orderAddress: shippingAddress,\n        paymentMethod: paymentMethod,\n        itemsPrice: itemsPrice,\n        shippingPrice: shippingPrice,\n        taxPrice: taxPrice,\n        totalPrice: totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Destination</h2>\n              <p>\n                <strong>Address: </strong>\n                {Province}, {District}, {Sector}, {cell}, {city}, {streetNumber}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {paymentMethod.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cartItems.length === 0 ? (\n                <Message>Your cart is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} * {item.price} = FRW\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>FRW {itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Transport</Col>\n                  <Col>FRW {shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>FRW {taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Amount</Col>\n                  <Col>FRW {totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {error && (\n                <ListGroup.Item>\n                  <Message variant='danger'>{error}</Message>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrder;\n","/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js",[],"/home/kagorora/Documents/dms-f/src/components/order/Order.js",["146"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport { getOrderDetails, payOrder } from \"../../store/actions/orderActions.js\";\nimport Loader from \"../reusable/Loader.js\";\nimport { ORDER_PAY_RESET } from \"../../store/types/types\";\n\nconst Order = ({ match }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { success: successPay, loading: loadingPay } = orderPay;\n\n  if (!loading) {\n    // Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1 className='mt-4'>Order: {order._id}</h1>\n      <>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Destination</h2>\n                <p>\n                  <strong>Name: </strong>\n                  {order.user.name}\n                </p>\n                <p>\n                  <strong>Email: </strong>\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address: </strong>\n                  {order.orderAddress.Province}, {order.orderAddress.District},{\" \"}\n                  {order.orderAddress.Sector}, {order.orderAddress.cell},{\" \"}\n                  {order.orderAddress.city}, {order.orderAddress.streetNumber}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isDelivered ? (\n                <Message variant='danger'>Not Delivered</Message>\n              ) : (\n                <Message variant='success'>Delivered</Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                  <strong>Method: </strong>\n                  {order.paymentMethod}\n                </p>\n              </ListGroup.Item>\n\n              {!order.isPaid ? (\n                <Message variant='danger'>Not Paid</Message>\n              ) : (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              )}\n\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order is Empty</Message>\n                ) : (\n                  <ListGroup variant='flush'>\n                    {order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} * {item.price} = FRW\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>FRW {order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Transport</Col>\n                    <Col>FRW {order.deliveryPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>FRW {order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Total Amount</Col>\n                    <Col>FRW {order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {loadingPay && <Loader />}\n                    {!sdkReady ? (\n                      <Loader />\n                    ) : (\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      />\n                    )}\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    </>\n  );\n};\n\nexport default Order;\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"149","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"149","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":9,"nodeType":"161","endLine":12,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":22,"column":10,"nodeType":"164","messageId":"165","endLine":22,"endColumn":17},{"ruleId":"147","replacedBy":"166"},{"ruleId":"149","replacedBy":"167"},{"ruleId":"159","severity":1,"message":"168","line":48,"column":6,"nodeType":"169","endLine":48,"endColumn":24,"suggestions":"170"},{"ruleId":"162","severity":1,"message":"171","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":16},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],["172"],["173"],["172"],["173"],["172"],["173"],"react-hooks/exhaustive-deps","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 49) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar",["172"],["173"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [history, order._id, success]",{"range":"177","text":"178"},[1360,1378],"[history, order._id, success]"]
[{"/home/kagorora/Documents/dms-f/src/App.js":"1","/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js":"2","/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js":"3","/home/kagorora/Documents/dms-f/src/components/reusable/Message.js":"4","/home/kagorora/Documents/dms-f/src/store/types/types.js":"5","/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js":"6","/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js":"7","/home/kagorora/Documents/dms-f/src/components/login/Login.js":"8","/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js":"9","/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js":"10","/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js":"11","/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js":"12","/home/kagorora/Documents/dms-f/src/components/register/Register.js":"13","/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js":"14","/home/kagorora/Documents/dms-f/src/index.js":"15","/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js":"16","/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js":"17","/home/kagorora/Documents/dms-f/src/store.js":"18","/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js":"19","/home/kagorora/Documents/dms-f/src/components/cart/Cart.js":"20","/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js":"21","/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js":"22","/home/kagorora/Documents/dms-f/src/components/profile/Profile.js":"23","/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js":"24","/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js":"25","/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js":"26","/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js":"27","/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js":"28","/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js":"29"},{"size":1501,"mtime":1612707952719,"results":"30","hashOfConfig":"31"},{"size":990,"mtime":1612194906665,"results":"32","hashOfConfig":"31"},{"size":1883,"mtime":1612275251107,"results":"33","hashOfConfig":"31"},{"size":244,"mtime":1612194906661,"results":"34","hashOfConfig":"31"},{"size":1745,"mtime":1612726400514,"results":"35","hashOfConfig":"31"},{"size":913,"mtime":1612243518508,"results":"36","hashOfConfig":"31"},{"size":1001,"mtime":1612245195426,"results":"37","hashOfConfig":"31"},{"size":2235,"mtime":1612246403732,"results":"38","hashOfConfig":"31"},{"size":379,"mtime":1612243518508,"results":"39","hashOfConfig":"31"},{"size":1541,"mtime":1612243518508,"results":"40","hashOfConfig":"31"},{"size":1238,"mtime":1612704940927,"results":"41","hashOfConfig":"31"},{"size":1160,"mtime":1612194906665,"results":"42","hashOfConfig":"31"},{"size":4847,"mtime":1612243518508,"results":"43","hashOfConfig":"31"},{"size":3485,"mtime":1612275251107,"results":"44","hashOfConfig":"31"},{"size":319,"mtime":1612197568095,"results":"45","hashOfConfig":"31"},{"size":2066,"mtime":1612243518508,"results":"46","hashOfConfig":"31"},{"size":336,"mtime":1612243518508,"results":"47","hashOfConfig":"31"},{"size":1811,"mtime":1612737015193,"results":"48","hashOfConfig":"31"},{"size":3897,"mtime":1612246014554,"results":"49","hashOfConfig":"31"},{"size":3542,"mtime":1612246650411,"results":"50","hashOfConfig":"31"},{"size":1164,"mtime":1612704885018,"results":"51","hashOfConfig":"31"},{"size":310,"mtime":1612243518508,"results":"52","hashOfConfig":"31"},{"size":4959,"mtime":1612275251103,"results":"53","hashOfConfig":"31"},{"size":3031,"mtime":1612737845546,"results":"54","hashOfConfig":"31"},{"size":1263,"mtime":1612704750771,"results":"55","hashOfConfig":"31"},{"size":1792,"mtime":1612737252583,"results":"56","hashOfConfig":"31"},{"size":5161,"mtime":1612738345291,"results":"57","hashOfConfig":"31"},{"size":551,"mtime":1612735377048,"results":"58","hashOfConfig":"31"},{"size":848,"mtime":1612726988418,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"v1pjll",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kagorora/Documents/dms-f/src/App.js",[],["128","129"],"/home/kagorora/Documents/dms-f/src/store/reducers/productReducers.js",[],["130","131"],"/home/kagorora/Documents/dms-f/src/store/reducers/userReducers.js",[],["132","133"],"/home/kagorora/Documents/dms-f/src/components/reusable/Message.js",[],"/home/kagorora/Documents/dms-f/src/store/types/types.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Product/Product.js",[],"/home/kagorora/Documents/dms-f/src/components/buyer/Buyer.js",[],["134","135"],"/home/kagorora/Documents/dms-f/src/components/login/Login.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/Loader.js",[],["136","137"],"/home/kagorora/Documents/dms-f/src/components/reusable/Rating/Rating.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/cartsActions.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/productsActions.js",[],"/home/kagorora/Documents/dms-f/src/components/register/Register.js",[],["138","139"],"/home/kagorora/Documents/dms-f/src/store/actions/usersActions.js",[],"/home/kagorora/Documents/dms-f/src/index.js",[],["140","141"],"/home/kagorora/Documents/dms-f/src/components/reusable/Header/Header.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/FormContainer.js",[],"/home/kagorora/Documents/dms-f/src/store.js",[],"/home/kagorora/Documents/dms-f/src/components/productDetails/ProductDetails.js",[],"/home/kagorora/Documents/dms-f/src/components/cart/Cart.js",[],"/home/kagorora/Documents/dms-f/src/store/reducers/cartReducers.js",[],["142","143"],"/home/kagorora/Documents/dms-f/src/components/reusable/Footer/Footer.js",[],"/home/kagorora/Documents/dms-f/src/components/profile/Profile.js",["144","145"],"import React, { useEffect, useState } from \"react\";\nimport { FormGroup, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUserProfile,\n  UpdateUserProfile,\n} from \"../../store/actions/usersActions.js\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\n\nconst Profile = ({ history }) => {\n  const dispatch = new useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nationalId, setNationalId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userProfile = useSelector((state) => state.userProfile);\n  const { user, loading, error } = userProfile;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userProfileReset = useSelector((state) => state.userProfileReset);\n  const { success } = userProfileReset;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile(\"profile\"));\n      } else {\n        setName(user.name);\n        setPhoneNumber(user.phoneNumber);\n        setNationalId(user.nationalId);\n        setEmail(user.email);\n        setAddress(user.address);\n        setUserType(user.userType);\n        setMessage(user.message);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password && confirmPassword && password !== confirmPassword) {\n      setMessage(\"passwords are not matching!, try again\");\n    } else {\n      dispatch(\n        UpdateUserProfile({\n          id: user._id,\n          name,\n          phoneNumber,\n          nationalId,\n          email,\n          address,\n          userType,\n        })\n      );\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>{\"Profile Updated\"}</Message>}\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder='enter name'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              value={phoneNumber}\n              placeholder='enter Phone Number'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>nationalId</Form.Label>\n            <Form.Control\n              onChange={(e) => setNationalId(e.target.value)}\n              value={nationalId}\n              placeholder='enter NationalId'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>email</Form.Label>\n            <Form.Control\n              type='email'\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              placeholder='enter email'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>location</Form.Label>\n            <Form.Control\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n              placeholder='enter Location'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>user Type</Form.Label>\n            <Form.Control\n              value={userType}\n              onChange={(e) => setUserType(e.target.value)}\n              disabled='disabled'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              placeholder='enter password'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>comfirm password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              placeholder='confirm password'\n            ></Form.Control>\n          </FormGroup>\n          <Button type='submit' variant='primary' className='btn-block rounded'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n","/home/kagorora/Documents/dms-f/src/components/shipping/Shipping.js",[],"/home/kagorora/Documents/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js",[],"/home/kagorora/Documents/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/home/kagorora/Documents/dms-f/src/components/placeOrder/PlaceOrder.js",["146"],"import React, { useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport CheckoutSteps from \"../reusable/CheckoutSteps/CheckoutSteps.js\";\nimport { createOrder } from \"../../store/actions/orderActions.js\";\n\nconst PlaceOrder = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, paymentMethod, cartItems } = cart;\n  const {\n    Province,\n    District,\n    Sector,\n    cell,\n    city,\n    streetNumber,\n  } = shippingAddress;\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  const itemsPrice = addDecimals(\n    cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  const shippingPrice = addDecimals(itemsPrice > 100 ? 0 : 100);\n\n  const taxPrice = addDecimals(Number((0.15 * itemsPrice).toFixed(2)));\n\n  const totalPrice = (\n    Number(itemsPrice) +\n    Number(shippingPrice) +\n    Number(taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cartItems,\n        orderAddress: shippingAddress,\n        paymentMethod: paymentMethod,\n        itemsPrice: itemsPrice,\n        shippingPrice: shippingPrice,\n        taxPrice: taxPrice,\n        totalPrice: totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Destination</h2>\n              <p>\n                <strong>Address: </strong>\n                {Province}, {District}, {Sector}, {cell}, {city}, {streetNumber}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {paymentMethod.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cartItems.length === 0 ? (\n                <Message>Your cart is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} * {item.price} = FRW\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>FRW {itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Transport</Col>\n                  <Col>FRW {shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>FRW {taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Amount</Col>\n                  <Col>FRW {totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {error && (\n                <ListGroup.Item>\n                  <Message variant='danger'>{error}</Message>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrder;\n","/home/kagorora/Documents/dms-f/src/store/reducers/orderReducers.js",[],"/home/kagorora/Documents/dms-f/src/store/actions/orderActions.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"149","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"149","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"147","replacedBy":"159"},{"ruleId":"149","replacedBy":"160"},{"ruleId":"147","replacedBy":"161"},{"ruleId":"149","replacedBy":"162"},{"ruleId":"147","replacedBy":"163"},{"ruleId":"149","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":12,"column":9,"nodeType":"167","endLine":12,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":22,"column":10,"nodeType":"170","messageId":"171","endLine":22,"endColumn":17},{"ruleId":"165","severity":1,"message":"172","line":48,"column":6,"nodeType":"173","endLine":48,"endColumn":24,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],["175"],["176"],["175"],["176"],["175"],["176"],["175"],["176"],["175"],["176"],["175"],["176"],["175"],["176"],"react-hooks/exhaustive-deps","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 49) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [history, order._id, success]",{"range":"180","text":"181"},[1360,1378],"[history, order._id, success]"]
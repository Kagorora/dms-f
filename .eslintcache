[{"/home/kagorora/Documents/DMS/dms-f/src/store.js":"1","/home/kagorora/Documents/DMS/dms-f/src/store/reducers/cartReducers.js":"2","/home/kagorora/Documents/DMS/dms-f/src/components/shipping/Shipping.js":"3","/home/kagorora/Documents/DMS/dms-f/src/store/reducers/productReducers.js":"4","/home/kagorora/Documents/DMS/dms-f/src/components/order/Order.js":"5","/home/kagorora/Documents/DMS/dms-f/src/components/admin/Users.js":"6","/home/kagorora/Documents/DMS/dms-f/src/components/placeOrder/PlaceOrder.js":"7","/home/kagorora/Documents/DMS/dms-f/src/components/admin/Products.js":"8","/home/kagorora/Documents/DMS/dms-f/src/components/buyer/Buyer.js":"9","/home/kagorora/Documents/DMS/dms-f/src/store/types/types.js":"10","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Footer/Footer.js":"11","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Loader.js":"12","/home/kagorora/Documents/DMS/dms-f/src/store/actions/usersActions.js":"13","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/SearchBox/SearchBox.js":"14","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Rating/Rating.js":"15","/home/kagorora/Documents/DMS/dms-f/src/components/admin/Orders.js":"16","/home/kagorora/Documents/DMS/dms-f/src/components/admin/EditProduct.js":"17","/home/kagorora/Documents/DMS/dms-f/src/index.js":"18","/home/kagorora/Documents/DMS/dms-f/src/components/register/Register.js":"19","/home/kagorora/Documents/DMS/dms-f/src/components/cart/Cart.js":"20","/home/kagorora/Documents/DMS/dms-f/src/components/profile/Profile.js":"21","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Header/Header.js":"22","/home/kagorora/Documents/DMS/dms-f/src/store/actions/productsActions.js":"23","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Product/Product.js":"24","/home/kagorora/Documents/DMS/dms-f/src/store/reducers/orderReducers.js":"25","/home/kagorora/Documents/DMS/dms-f/src/store/reducers/userReducers.js":"26","/home/kagorora/Documents/DMS/dms-f/src/components/paymentMethod/PaymentMethod.js":"27","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js":"28","/home/kagorora/Documents/DMS/dms-f/src/store/actions/cartsActions.js":"29","/home/kagorora/Documents/DMS/dms-f/src/components/login/Login.js":"30","/home/kagorora/Documents/DMS/dms-f/src/components/productDetails/ProductDetails.js":"31"},{"size":2542,"mtime":1617054792810,"results":"32","hashOfConfig":"33"},{"size":1303,"mtime":1616309136093,"results":"34","hashOfConfig":"33"},{"size":3316,"mtime":1616309136089,"results":"35","hashOfConfig":"33"},{"size":3173,"mtime":1616309136093,"results":"36","hashOfConfig":"33"},{"size":8154,"mtime":1616309136065,"results":"37","hashOfConfig":"33"},{"size":3376,"mtime":1616309136061,"results":"38","hashOfConfig":"33"},{"size":5163,"mtime":1616514724947,"results":"39","hashOfConfig":"33"},{"size":4237,"mtime":1616309136061,"results":"40","hashOfConfig":"33"},{"size":1068,"mtime":1616309136065,"results":"41","hashOfConfig":"33"},{"size":5123,"mtime":1617054202491,"results":"42","hashOfConfig":"33"},{"size":310,"mtime":1616309136089,"results":"43","hashOfConfig":"33"},{"size":379,"mtime":1616309136089,"results":"44","hashOfConfig":"33"},{"size":6293,"mtime":1616309136093,"results":"45","hashOfConfig":"33"},{"size":776,"mtime":1616309136089,"results":"46","hashOfConfig":"33"},{"size":1541,"mtime":1616309136089,"results":"47","hashOfConfig":"33"},{"size":4775,"mtime":1617101012262,"results":"48","hashOfConfig":"33"},{"size":5874,"mtime":1617100400282,"results":"49","hashOfConfig":"33"},{"size":319,"mtime":1616309136089,"results":"50","hashOfConfig":"33"},{"size":4653,"mtime":1616309136089,"results":"51","hashOfConfig":"33"},{"size":3597,"mtime":1616309136065,"results":"52","hashOfConfig":"33"},{"size":4984,"mtime":1616309136089,"results":"53","hashOfConfig":"33"},{"size":3388,"mtime":1616309136089,"results":"54","hashOfConfig":"33"},{"size":4333,"mtime":1616309136093,"results":"55","hashOfConfig":"33"},{"size":917,"mtime":1616309136089,"results":"56","hashOfConfig":"33"},{"size":4250,"mtime":1617054779025,"results":"57","hashOfConfig":"33"},{"size":3491,"mtime":1616309136093,"results":"58","hashOfConfig":"33"},{"size":1792,"mtime":1616309136089,"results":"59","hashOfConfig":"33"},{"size":1263,"mtime":1616309136089,"results":"60","hashOfConfig":"33"},{"size":1238,"mtime":1616309136093,"results":"61","hashOfConfig":"33"},{"size":2235,"mtime":1616309136065,"results":"62","hashOfConfig":"33"},{"size":7685,"mtime":1616309136089,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h8pbta",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kagorora/Documents/DMS/dms-f/src/store.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/reducers/cartReducers.js",[],["133","134"],"/home/kagorora/Documents/DMS/dms-f/src/components/shipping/Shipping.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/reducers/productReducers.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/order/Order.js",["135"],"/home/kagorora/Documents/DMS/dms-f/src/components/admin/Users.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/placeOrder/PlaceOrder.js",["136"],"import React, { useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../reusable/Message.js\";\nimport CheckoutSteps from \"../reusable/CheckoutSteps/CheckoutSteps.js\";\nimport { createOrder } from \"../../store/actions/orderActions.js\";\n\nconst PlaceOrder = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, paymentMethod, cartItems } = cart;\n  const {\n    Province,\n    District,\n    Sector,\n    cell,\n    city,\n    streetNumber,\n  } = shippingAddress;\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  const itemsPrice = addDecimals(\n    cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  const shippingPrice = addDecimals(itemsPrice > 100 ? 0 : 100);\n\n  const taxPrice = addDecimals(Number((0.15 * itemsPrice).toFixed(2)));\n\n  const totalPrice = (\n    Number(itemsPrice) +\n    Number(shippingPrice) +\n    Number(taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cartItems,\n        orderAddress: shippingAddress,\n        paymentMethod: paymentMethod,\n        itemsPrice: itemsPrice,\n        shippingPrice: shippingPrice,\n        taxPrice: taxPrice,\n        totalPrice: totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Destination</h2>\n              <p>\n                <strong>Address: </strong>\n                {Province}, {District}, {Sector}, {cell}, {city}, {streetNumber}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cartItems.length === 0 ? (\n                <Message>Your cart is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} * {item.price} = FRW\n                          `${addDecimals(item.qty * item.price)}`\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4} className='justify-content-center ml-0.5 mt-5'>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>FRW {itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Transport</Col>\n                  <Col>FRW {shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>FRW {taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Amount</Col>\n                  <Col>FRW {totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {error && (\n                <ListGroup.Item>\n                  <Message variant='danger'>{error}</Message>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrder;\n",["137","138"],"/home/kagorora/Documents/DMS/dms-f/src/components/admin/Products.js",["139"],"/home/kagorora/Documents/DMS/dms-f/src/components/buyer/Buyer.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/types/types.js",[],["140","141"],"/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Footer/Footer.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Loader.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/actions/usersActions.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/reusable/SearchBox/SearchBox.js",["142"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {    \n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\"\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Rating/Rating.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/admin/Orders.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/admin/EditProduct.js",["143","144","145"],"/home/kagorora/Documents/DMS/dms-f/src/index.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/register/Register.js",["146","147"],"import React, { useEffect, useState } from 'react';\nimport { FormGroup, Form, Button, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FormContainer from '../reusable/FormContainer.js';\nimport { register } from '../../store/actions/usersActions.js'\nimport Message from '../reusable/Message.js';\nimport Loader from '../reusable/Loader.js';\n\nconst Register = ({ history, location }) => {\n\n    const dispatch = new useDispatch();\n\n    const [name, setName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [nationalId, setNationalId] = useState('');\n    const [address, setAddress] = useState('');\n    const [userType, setUserType] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const userRegister = useSelector(state => state.userRegister)\n\n    const { userInfo, loading, error } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('passwords are not matching!, try again');\n        }\n        dispatch(register(name, phoneNumber, nationalId, email, userType, password))\n    }\n\n    return (\n        <FormContainer >\n            <h1>SIGN UP</h1>\n            { loading && <Loader />}\n            {error && <Message variant='danger'>{error}</Message>}\n            {message && <Message variant='danger'>{message}</Message>}\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control onChange={(e) => setName(e.target.value)} value={name} placeholder='enter name'></Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control onChange={(e) => setPhoneNumber(e.target.value)} value={phoneNumber} placeholder='enter Phone Number'></Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label>nationalId</Form.Label>\n                    <Form.Control onChange={(e) => setNationalId(e.target.value)} value={nationalId} placeholder='enter NationalId'></Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label >email</Form.Label>\n                    <Form.Control type='email' onChange={(e) => setEmail(e.target.value)} value={email} placeholder='enter email'></Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label>user Type</Form.Label>\n                    <Form.Control\n                        as='select'\n                        value={userType}\n                        onChange={(e) =>\n                            setUserType(e.target.value)\n                        }\n                    >\n                         <option selected value=\"\">Select User Type</option>\n                        <option>\n                            buyer\n                        </option>\n                        <option>\n                            seller\n                        </option>\n                    </Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label>password</Form.Label>\n                    <Form.Control type='password' onChange={(e) => setPassword(e.target.value)} value={password} placeholder='enter password'></Form.Control>\n                </FormGroup>\n                <FormGroup>\n                    <Form.Label >comfirm password</Form.Label>\n                    <Form.Control type='password' onChange={(e) => setConfirmPassword(e.target.value)} value={confirmPassword} placeholder='confirm password'></Form.Control>\n                </FormGroup>\n                <Button type='submit' variant='primary' className='btn-block rounded'>SIGN UP</Button>\n            </Form>\n            <div className=\"my-3\">\n\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an account?\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                            Login\n          </Link>\n                    </Col>\n                </Row>\n\n            </div>\n        </FormContainer>\n    )\n}\n\nexport default Register\n","/home/kagorora/Documents/DMS/dms-f/src/components/cart/Cart.js",["148"],"/home/kagorora/Documents/DMS/dms-f/src/components/profile/Profile.js",["149","150"],"import React, { useEffect, useState } from \"react\";\nimport { FormGroup, Form, Button } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUserProfile,\n  UpdateUserProfile,\n} from \"../../store/actions/usersActions.js\";\nimport Message from \"../reusable/Message.js\";\nimport Loader from \"../reusable/Loader.js\";\nimport FormContainer from '../reusable/FormContainer.js';\n\nconst Profile = ({ history }) => {\n  const dispatch = new useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nationalId, setNationalId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userProfile = useSelector((state) => state.userProfile);\n  const { user, loading, error } = userProfile;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userProfileReset = useSelector((state) => state.userProfileReset);\n  const { success } = userProfileReset;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile(\"profile\"));\n      } else {\n        setName(user.name);\n        setPhoneNumber(user.phoneNumber);\n        setNationalId(user.nationalId);\n        setEmail(user.email);\n        setAddress(user.address);\n        setUserType(user.userType);\n        setMessage(user.message);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password && confirmPassword && password !== confirmPassword) {\n      setMessage(\"passwords are not matching!, try again\");\n    } else {\n      dispatch(\n        UpdateUserProfile({\n          id: user._id,\n          name,\n          phoneNumber,\n          nationalId,\n          email,\n          address,\n          userType,\n        })\n      );\n    }\n  };\n\n  return (\n    <FormContainer>\n      {/* <Col md={8}> */}\n        <h2>User Profile</h2>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>{\"Profile Updated\"}</Message>}\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              placeholder='enter name'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              onChange={(e) => setPhoneNumber(e.target.value)}\n              value={phoneNumber}\n              placeholder='enter Phone Number'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>nationalId</Form.Label>\n            <Form.Control\n              onChange={(e) => setNationalId(e.target.value)}\n              value={nationalId}\n              placeholder='enter NationalId'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>email</Form.Label>\n            <Form.Control\n              type='email'\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              placeholder='enter email'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>location</Form.Label>\n            <Form.Control\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n              placeholder='enter Location'\n            ></Form.Control>\n          </FormGroup>\n\n          <FormGroup>\n            <Form.Label>user Type</Form.Label>\n            <Form.Control\n              value={userType}\n              onChange={(e) => setUserType(e.target.value)}\n              disabled='disabled'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              placeholder='enter password'\n            ></Form.Control>\n          </FormGroup>\n          <FormGroup>\n            <Form.Label>comfirm password</Form.Label>\n            <Form.Control\n              type='password'\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              placeholder='confirm password'\n            ></Form.Control>\n          </FormGroup>\n          <Button type='submit' variant='primary' className='btn-block rounded'>\n            Update\n          </Button>\n        </Form>\n      {/* </Col> */}\n    </FormContainer>\n  );\n};\n\nexport default Profile;\n","/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Header/Header.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/actions/productsActions.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/reusable/Product/Product.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/reducers/orderReducers.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/reducers/userReducers.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/paymentMethod/PaymentMethod.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/reusable/CheckoutSteps/CheckoutSteps.js",[],"/home/kagorora/Documents/DMS/dms-f/src/store/actions/cartsActions.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/login/Login.js",[],"/home/kagorora/Documents/DMS/dms-f/src/components/productDetails/ProductDetails.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":60,"column":6,"nodeType":"157","endLine":60,"endColumn":24,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":48,"column":6,"nodeType":"157","endLine":48,"endColumn":24,"suggestions":"160"},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"155","severity":1,"message":"163","line":47,"column":6,"nodeType":"157","endLine":47,"endColumn":65,"suggestions":"164"},{"ruleId":"151","replacedBy":"165"},{"ruleId":"153","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"171","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"172","line":21,"column":9,"nodeType":"173","endLine":21,"endColumn":37},{"ruleId":"167","severity":1,"message":"174","line":31,"column":21,"nodeType":"169","messageId":"170","endLine":31,"endColumn":33},{"ruleId":"167","severity":1,"message":"175","line":18,"column":12,"nodeType":"169","messageId":"170","endLine":18,"endColumn":19},{"ruleId":"167","severity":1,"message":"176","line":18,"column":21,"nodeType":"169","messageId":"170","endLine":18,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":112,"column":44,"nodeType":"179","messageId":"180","endLine":112,"endColumn":46},{"ruleId":"155","severity":1,"message":"181","line":13,"column":9,"nodeType":"173","endLine":13,"endColumn":37},{"ruleId":"167","severity":1,"message":"182","line":23,"column":10,"nodeType":"169","messageId":"170","endLine":23,"endColumn":17},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["186"],["183"],["184"],"React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["187"],["183"],["184"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 59) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","VariableDeclarator","'setUploading' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The 'dispatch' object construction makes the dependencies of useEffect Hook (at line 50) change on every render. To fix this, wrap the initialization of 'dispatch' in its own useMemo() Hook.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [dispatch, orderId, successDelivered]",{"range":"194","text":"195"},"Update the dependencies array to be: [history, order._id, success]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, userInfo, history, successDelete, successCreate, createdProduct._id]",{"range":"198","text":"199"},[1727,1745],"[dispatch, orderId, successDelivered]",[1360,1378],"[history, order._id, success]",[1449,1508],"[dispatch, userInfo, history, successDelete, successCreate, createdProduct._id]"]